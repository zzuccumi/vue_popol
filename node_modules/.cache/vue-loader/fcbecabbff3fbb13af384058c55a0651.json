{"remainingRequest":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/src/components/sample/SampleComponent.vue?vue&type=style&index=0&id=2f591884&scoped=true&lang=css&","dependencies":[{"path":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/src/components/sample/SampleComponent.vue","mtime":1701971447327},{"path":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/node_modules/css-loader/dist/cjs.js","mtime":1701971442365},{"path":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1701971441510},{"path":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/node_modules/postcss-loader/src/index.js","mtime":1701971443986},{"path":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1701971441500},{"path":"/Users/kyubinkim/Documents/포폴작업폴더/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1701971441510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpkaXYuaW5mbyB7DQogIGRpc3BsYXk6IGJsb2NrOw0KfQ0K"},{"version":3,"sources":["SampleComponent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoGA;AACA;AACA","file":"SampleComponent.vue","sourceRoot":"src/components/sample","sourcesContent":["<template>\r\n  <div class=\"info\">\r\n    <div>\r\n    <label for=\"no\">no : </label>\r\n    <input type=\"text\" v-focus v-model=\"no\" name=\"\" value=\"\" id=\"no\">\r\n    </div>\r\n    <div>\r\n    <label for=\"title\">title : </label>\r\n    <input type=\"text\" v-model=\"title\" name=\"\" value=\"\" id=\"title\">\r\n    </div>\r\n    <div>\r\n    <label for=\"contents\">contents : </label>\r\n    <input type=\"text\" v-model=\"contents\" name=\"\" value=\"\" id=\"contents\">\r\n    </div>\r\n    <div>\r\n    <label for=\"createId\">createId : </label>\r\n    <input type=\"text\" v-model=\"createId\" name=\"\" value=\"\" id=\"createId\">\r\n    </div>\r\n    <div>\r\n    <label for=\"createDt\">createDt : </label>\r\n    <input type=\"text\" v-model=\"createDt\" name=\"\" value=\"\" id=\"createDt\">\r\n    </div>\r\n    <div>\r\n    <label for=\"updateId\">updateId : </label>\r\n    <input type=\"text\" v-model=\"updateId\" name=\"\" value=\"\" id=\"updateId\">\r\n    </div>\r\n    <div>\r\n    <label for=\"updateDt\">updateDt : </label>\r\n    <input type=\"text\" v-model=\"updateDt\" name=\"\" value=\"\" id=\"updateDt\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  getSampleApi,\r\n  getTestSampleApi,\r\n} from '@/services/api';\r\nimport { mapState, mapMutations } from 'vuex';\r\n\r\nexport default {\r\n  name: 'SampleComponent',\r\n  data() {\r\n    return {\r\n      no : '',\r\n      title : '',\r\n      contents : '',\r\n      createId : '',\r\n      createDt : '',\r\n      updateId : '',\r\n      updateDt : ''\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initData();\r\n  },\r\n  methods: {\r\n    initData() {\r\n      let data = {};\r\n      if (this.$store.state.storedSample.no) {\r\n        data = this.$store.state.storedSample;\r\n        this.setSampleData(data);\r\n      }\r\n      else {\r\n        data = getTestSampleApi(1).resultData;\r\n        this.setSampleData(data);\r\n        let _this = this;\r\n        getSampleApi(1)\r\n          .then((response) => {\r\n            data = response.data.resultData;\r\n            _this.setSampleData(data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n          });\r\n        this.setStoredSampleData(data);\r\n      }\r\n    },\r\n    setSampleData(data) {\r\n      this.no = data.no;\r\n      this.title = data.title;\r\n      this.contents = data.contents;\r\n      this.createId = data.createId;\r\n      this.createDt = data.createDt;\r\n      this.updateId = data.updateId;\r\n      this.updateDt = data.updateDt;\r\n    },\r\n    ...mapMutations({\r\n      setStoredSampleData: 'setStoredSampleData',\r\n    }),\r\n  },\r\n  computed: {\r\n    ...mapState([\r\n      'storedSample'\r\n    ])\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\ndiv.info {\r\n  display: block;\r\n}\r\n</style>\r\n"]}]}