{"remainingRequest":"/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kyubin.kim/Documents/vue_popol/src/views/project/ProjectList.vue?vue&type=template&id=0dd332d2&scoped=true&","dependencies":[{"path":"/Users/kyubin.kim/Documents/vue_popol/src/views/project/ProjectList.vue","mtime":1693160443098},{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1693160432285},{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1693160432305},{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/cache-loader/dist/cjs.js","mtime":1693160432285},{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1693160432304}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}