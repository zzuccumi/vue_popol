{"remainingRequest":"/Users/kyubin.kim/Documents/vue_popol/node_modules/babel-loader/lib/index.js!/Users/kyubin.kim/Documents/vue_popol/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroup.js","dependencies":[{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/vuetify/lib/components/VSlideGroup/VSlideGroup.js","mtime":1693160440858},{"path":"/Users/kyubin.kim/Documents/vue_popol/babel.config.js","mtime":1693160427120},{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/@vue/cli-plugin-babel/node_modules/cache-loader/dist/cjs.js","mtime":1693160432253},{"path":"/Users/kyubin.kim/Documents/vue_popol/node_modules/babel-loader/lib/index.js","mtime":1693160432578}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../src/components/VSlideGroup/VSlideGroup.ts"],"names":[],"mappings":"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","sourcesContent":["// Styles\nimport './VSlideGroup.sass'\n\n// Components\nimport VIcon from '../VIcon'\nimport { VFadeTransition } from '../transitions'\n\n// Extensions\nimport { BaseItemGroup } from '../VItemGroup/VItemGroup'\n\n// Mixins\nimport Mobile from '../../mixins/mobile'\n\n// Directives\nimport Resize from '../../directives/resize'\nimport Touch from '../../directives/touch'\n\n// Utilities\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode } from 'vue'\nimport { composedPath } from '../../util/helpers'\n\ninterface TouchEvent {\n  touchstartX: number\n  touchstartY: number\n  touchmoveX: number\n  touchmoveY: number\n  stopPropagation: Function\n}\n\ninterface Widths {\n  content: number\n  wrapper: number\n}\n\ninterface options extends Vue {\n  $refs: {\n    content: HTMLElement\n    wrapper: HTMLElement\n  }\n}\n\nfunction bias (val: number) {\n  const c = 0.501\n  const x = Math.abs(val)\n  return Math.sign(val) * (x / ((1 / c - 2) * (1 - x) + 1))\n}\n\nexport function calculateUpdatedOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean,\n  currentScrollOffset: number\n): number {\n  const clientWidth = selectedElement.clientWidth\n  const offsetLeft = rtl\n    ? (widths.content - selectedElement.offsetLeft - clientWidth)\n    : selectedElement.offsetLeft\n\n  if (rtl) {\n    currentScrollOffset = -currentScrollOffset\n  }\n\n  const totalWidth = widths.wrapper + currentScrollOffset\n  const itemOffset = clientWidth + offsetLeft\n  const additionalOffset = clientWidth * 0.4\n\n  if (offsetLeft <= currentScrollOffset) {\n    currentScrollOffset = Math.max(offsetLeft - additionalOffset, 0)\n  } else if (totalWidth <= itemOffset) {\n    currentScrollOffset = Math.min(currentScrollOffset - (totalWidth - itemOffset - additionalOffset), widths.content - widths.wrapper)\n  }\n\n  return rtl ? -currentScrollOffset : currentScrollOffset\n}\n\nexport function calculateCenteredOffset (\n  selectedElement: HTMLElement,\n  widths: Widths,\n  rtl: boolean\n): number {\n  const { offsetLeft, clientWidth } = selectedElement\n\n  if (rtl) {\n    const offsetCentered = widths.content - offsetLeft - clientWidth / 2 - widths.wrapper / 2\n    return -Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  } else {\n    const offsetCentered = offsetLeft + clientWidth / 2 - widths.wrapper / 2\n    return Math.min(widths.content - widths.wrapper, Math.max(0, offsetCentered))\n  }\n}\n\nexport const BaseSlideGroup = mixins<options &\n/* eslint-disable indent */\n  ExtractVue<[\n    typeof BaseItemGroup,\n    typeof Mobile,\n  ]>\n/* eslint-enable indent */\n>(\n  BaseItemGroup,\n  Mobile,\n  /* @vue/component */\n).extend({\n  name: 'base-slide-group',\n\n  directives: {\n    Resize,\n    Touch,\n  },\n\n  props: {\n    activeClass: {\n      type: String,\n      default: 'v-slide-item--active',\n    },\n    centerActive: Boolean,\n    nextIcon: {\n      type: String,\n      default: '$next',\n    },\n    prevIcon: {\n      type: String,\n      default: '$prev',\n    },\n    showArrows: {\n      type: [Boolean, String],\n      validator: v => (\n        typeof v === 'boolean' || [\n          'always',\n          'desktop',\n          'mobile',\n        ].includes(v)\n      ),\n    },\n  },\n\n  data: () => ({\n    isOverflowing: false,\n    resizeTimeout: 0,\n    startX: 0,\n    isSwipingHorizontal: false,\n    isSwiping: false,\n    scrollOffset: 0,\n    widths: {\n      content: 0,\n      wrapper: 0,\n    },\n  }),\n\n  computed: {\n    canTouch (): boolean {\n      return typeof window !== 'undefined'\n    },\n    __cachedNext (): VNode {\n      return this.genTransition('next')\n    },\n    __cachedPrev (): VNode {\n      return this.genTransition('prev')\n    },\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-slide-group': true,\n        'v-slide-group--has-affixes': this.hasAffixes,\n        'v-slide-group--is-overflowing': this.isOverflowing,\n      }\n    },\n    hasAffixes (): Boolean {\n      switch (this.showArrows) {\n        // Always show arrows on desktop & mobile\n        case 'always': return true\n\n        // Always show arrows on desktop\n        case 'desktop': return !this.isMobile\n\n        // Show arrows on mobile when overflowing.\n        // This matches the default 2.2 behavior\n        case true: return this.isOverflowing || Math.abs(this.scrollOffset) > 0\n\n        // Always show on mobile\n        case 'mobile': return (\n          this.isMobile ||\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n\n        // https://material.io/components/tabs#scrollable-tabs\n        // Always show arrows when\n        // overflowed on desktop\n        default: return (\n          !this.isMobile &&\n          (this.isOverflowing || Math.abs(this.scrollOffset) > 0)\n        )\n      }\n    },\n    hasNext (): boolean {\n      if (!this.hasAffixes) return false\n\n      const { content, wrapper } = this.widths\n\n      // Check one scroll ahead to know the width of right-most item\n      return content > Math.abs(this.scrollOffset) + wrapper\n    },\n    hasPrev (): boolean {\n      return this.hasAffixes && this.scrollOffset !== 0\n    },\n  },\n\n  watch: {\n    internalValue: 'setWidths',\n    // When overflow changes, the arrows alter\n    // the widths of the content and wrapper\n    // and need to be recalculated\n    isOverflowing: 'setWidths',\n    scrollOffset (val) {\n      if (this.$vuetify.rtl) val = -val\n\n      let scroll =\n        val <= 0\n          ? bias(-val)\n          : val > this.widths.content - this.widths.wrapper\n            ? -(this.widths.content - this.widths.wrapper) + bias(this.widths.content - this.widths.wrapper - val)\n            : -val\n\n      if (this.$vuetify.rtl) scroll = -scroll\n\n      this.$refs.content.style.transform = `translateX(${scroll}px)`\n    },\n  },\n\n  mounted () {\n    if (typeof ResizeObserver !== 'undefined') {\n      const obs = new ResizeObserver(() => {\n        this.onResize()\n      })\n      obs.observe(this.$el)\n      obs.observe(this.$refs.content)\n      this.$on('hook:destroyed', () => {\n        obs.disconnect()\n      })\n    } else {\n      let itemsLength = 0\n      this.$on('hook:beforeUpdate', () => {\n        itemsLength = (this.$refs.content?.children || []).length\n      })\n      this.$on('hook:updated', () => {\n        if (itemsLength === (this.$refs.content?.children || []).length) return\n        this.setWidths()\n      })\n    }\n  },\n\n  methods: {\n    onScroll () {\n      this.$refs.wrapper.scrollLeft = 0\n    },\n    onFocusin (e: FocusEvent) {\n      if (!this.isOverflowing) return\n\n      // Focused element is likely to be the root of an item, so a\n      // breadth-first search will probably find it in the first iteration\n      for (const el of composedPath(e)) {\n        for (const vm of this.items) {\n          if (vm.$el === el) {\n            this.scrollOffset = calculateUpdatedOffset(\n              vm.$el as HTMLElement,\n              this.widths,\n              this.$vuetify.rtl,\n              this.scrollOffset\n            )\n            return\n          }\n        }\n      }\n    },\n    // Always generate next for scrollable hint\n    genNext (): VNode | null {\n      const slot = this.$scopedSlots.next\n        ? this.$scopedSlots.next({})\n        : this.$slots.next || this.__cachedNext\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__next',\n        class: {\n          'v-slide-group__next--disabled': !this.hasNext,\n        },\n        on: {\n          click: () => this.onAffixClick('next'),\n        },\n        key: 'next',\n      }, [slot])\n    },\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__content',\n        ref: 'content',\n        on: {\n          focusin: this.onFocusin,\n        },\n      }, this.$slots.default)\n    },\n    genData (): object {\n      return {\n        class: this.classes,\n        directives: [{\n          name: 'resize',\n          value: this.onResize,\n        }],\n      }\n    },\n    genIcon (location: 'prev' | 'next'): VNode | null {\n      let icon = location\n\n      if (this.$vuetify.rtl && location === 'prev') {\n        icon = 'next'\n      } else if (this.$vuetify.rtl && location === 'next') {\n        icon = 'prev'\n      }\n\n      const upperLocation = `${location[0].toUpperCase()}${location.slice(1)}`\n      const hasAffix = (this as any)[`has${upperLocation}`]\n\n      if (\n        !this.showArrows &&\n        !hasAffix\n      ) return null\n\n      return this.$createElement(VIcon, {\n        props: {\n          disabled: !hasAffix,\n        },\n      }, (this as any)[`${icon}Icon`])\n    },\n    // Always generate prev for scrollable hint\n    genPrev (): VNode | null {\n      const slot = this.$scopedSlots.prev\n        ? this.$scopedSlots.prev({})\n        : this.$slots.prev || this.__cachedPrev\n\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__prev',\n        class: {\n          'v-slide-group__prev--disabled': !this.hasPrev,\n        },\n        on: {\n          click: () => this.onAffixClick('prev'),\n        },\n        key: 'prev',\n      }, [slot])\n    },\n    genTransition (location: 'prev' | 'next') {\n      return this.$createElement(VFadeTransition, [this.genIcon(location)])\n    },\n    genWrapper (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-slide-group__wrapper',\n        directives: [{\n          name: 'touch',\n          value: {\n            start: (e: TouchEvent) => this.overflowCheck(e, this.onTouchStart),\n            move: (e: TouchEvent) => this.overflowCheck(e, this.onTouchMove),\n            end: (e: TouchEvent) => this.overflowCheck(e, this.onTouchEnd),\n          },\n        }],\n        ref: 'wrapper',\n        on: {\n          scroll: this.onScroll,\n        },\n      }, [this.genContent()])\n    },\n    calculateNewOffset (direction: 'prev' | 'next', widths: Widths, rtl: boolean, currentScrollOffset: number) {\n      const sign = rtl ? -1 : 1\n      const newAbosluteOffset = sign * currentScrollOffset +\n        (direction === 'prev' ? -1 : 1) * widths.wrapper\n\n      return sign * Math.max(Math.min(newAbosluteOffset, widths.content - widths.wrapper), 0)\n    },\n    onAffixClick (location: 'prev' | 'next') {\n      this.$emit(`click:${location}`)\n      this.scrollTo(location)\n    },\n    onResize () {\n      /* istanbul ignore next */\n      if (this._isDestroyed) return\n\n      this.setWidths()\n    },\n    onTouchStart (e: TouchEvent) {\n      const { content } = this.$refs\n\n      this.startX = this.scrollOffset + e.touchstartX as number\n\n      content.style.setProperty('transition', 'none')\n      content.style.setProperty('willChange', 'transform')\n    },\n    onTouchMove (e: TouchEvent) {\n      if (!this.canTouch) return\n\n      if (!this.isSwiping) {\n        // only calculate disableSwipeHorizontal during the first onTouchMove invoke\n        // in order to ensure disableSwipeHorizontal value is consistent between onTouchStart and onTouchEnd\n        const diffX = e.touchmoveX - e.touchstartX\n        const diffY = e.touchmoveY - e.touchstartY\n        this.isSwipingHorizontal = Math.abs(diffX) > Math.abs(diffY)\n        this.isSwiping = true\n      }\n\n      if (this.isSwipingHorizontal) {\n        // sliding horizontally\n        this.scrollOffset = this.startX - e.touchmoveX\n        // temporarily disable window vertical scrolling\n        document.documentElement.style.overflowY = 'hidden'\n      }\n    },\n    onTouchEnd () {\n      if (!this.canTouch) return\n\n      const { content, wrapper } = this.$refs\n      const maxScrollOffset = content.clientWidth - wrapper.clientWidth\n\n      content.style.setProperty('transition', null)\n      content.style.setProperty('willChange', null)\n\n      if (this.$vuetify.rtl) {\n        /* istanbul ignore else */\n        if (this.scrollOffset > 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset <= -maxScrollOffset) {\n          this.scrollOffset = -maxScrollOffset\n        }\n      } else {\n        /* istanbul ignore else */\n        if (this.scrollOffset < 0 || !this.isOverflowing) {\n          this.scrollOffset = 0\n        } else if (this.scrollOffset >= maxScrollOffset) {\n          this.scrollOffset = maxScrollOffset\n        }\n      }\n\n      this.isSwiping = false\n      // rollback whole page scrolling to default\n      document.documentElement.style.removeProperty('overflow-y')\n    },\n    overflowCheck (e: TouchEvent, fn: (e: TouchEvent) => void) {\n      e.stopPropagation()\n      this.isOverflowing && fn(e)\n    },\n    scrollIntoView /* istanbul ignore next */ () {\n      if (!this.selectedItem && this.items.length) {\n        const lastItemPosition = this.items[this.items.length - 1].$el.getBoundingClientRect()\n        const wrapperPosition = this.$refs.wrapper.getBoundingClientRect()\n\n        if (\n          (this.$vuetify.rtl && wrapperPosition.right < lastItemPosition.right) ||\n          (!this.$vuetify.rtl && wrapperPosition.left > lastItemPosition.left)\n        ) {\n          this.scrollTo('prev')\n        }\n      }\n\n      if (!this.selectedItem) {\n        return\n      }\n\n      if (\n        this.selectedIndex === 0 ||\n        (!this.centerActive && !this.isOverflowing)\n      ) {\n        this.scrollOffset = 0\n      } else if (this.centerActive) {\n        this.scrollOffset = calculateCenteredOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl\n        )\n      } else if (this.isOverflowing) {\n        this.scrollOffset = calculateUpdatedOffset(\n          this.selectedItem.$el as HTMLElement,\n          this.widths,\n          this.$vuetify.rtl,\n          this.scrollOffset\n        )\n      }\n    },\n    scrollTo /* istanbul ignore next */ (location: 'prev' | 'next') {\n      this.scrollOffset = this.calculateNewOffset(location, {\n        // Force reflow\n        content: this.$refs.content ? this.$refs.content.clientWidth : 0,\n        wrapper: this.$refs.wrapper ? this.$refs.wrapper.clientWidth : 0,\n      }, this.$vuetify.rtl, this.scrollOffset)\n    },\n    setWidths () {\n      window.requestAnimationFrame(() => {\n        if (this._isDestroyed) return\n\n        const { content, wrapper } = this.$refs\n\n        this.widths = {\n          content: content ? content.clientWidth : 0,\n          wrapper: wrapper ? wrapper.clientWidth : 0,\n        }\n\n        // https://github.com/vuetifyjs/vuetify/issues/13212\n        // We add +1 to the wrappers width to prevent an issue where the `clientWidth`\n        // gets calculated wrongly by the browser if using a different zoom-level.\n        this.isOverflowing = this.widths.wrapper + 1 < this.widths.content\n\n        this.scrollIntoView()\n      })\n    },\n  },\n\n  render (h): VNode {\n    return h('div', this.genData(), [\n      this.genPrev(),\n      this.genWrapper(),\n      this.genNext(),\n    ])\n  },\n})\n\nexport default BaseSlideGroup.extend({\n  name: 'v-slide-group',\n\n  provide (): object {\n    return {\n      slideGroup: this,\n    }\n  },\n})\n"],"sourceRoot":""}]}